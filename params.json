{"name":"Oxygen","tagline":" C library for Win32 application development","body":"I am working on a simple little library that helps me write Windows applications in plain C.\r\nIt implements the object oriented paradigm, featuring single inheritance and virtual methods.\r\nThe API is modeled loosely along the Python C API.\r\n\r\n\r\n### Hello World!\r\nThis is how the all time classic would be implemented:\r\n\r\n\r\n\r\n    #include \"Oxygen.h\"\r\n\r\n    int APIENTRY wWinMain(_In_ HINSTANCE hInstance, _In_opt_ HINSTANCE hPrevInstance, _In_ LPTSTR lpCmdLine, _In_ int nCmdShow)\r\n    {\r\n        UNREFERENCED_PARAMETER(hPrevInstance);\r\n        UNREFERENCED_PARAMETER(lpCmdLine);\r\n\r\n        Oxygen_Init(\"Hello\");\r\n\r\n        OxRect rc = { .iLeft = 40, .iTop = 30, .iWidth = 320, .iHeight = 240 };\r\n        OxApp->oxWindow = OxWindow_New(NULL, &rc, \"Powered by Oxygen\");\r\n\r\n        rc = (OxRect){ .iLeft = 20, .iTop = OxWIDGET_CENTER, .iWidth = -20, .iHeight = 20 };\r\n        OxLabelObject* oxLabel = OxLabel_New(OxApp->oxWindow, &rc, \"Hello World!\");\r\n        OxLabel_Align(oxLabel, OxALIGN_HORIZ_CENTER);\r\n\r\n        OxWidget_ShowV(OxApp->oxWindow, TRUE);\r\n        return OxApplication_Run();\r\n    }\r\n\r\nAn example of a more complex application would look like this:\r\n\r\n    #include \"Oxygen.h\"\r\n\r\n    typedef struct _ClientWindow {\r\n        OxTabObject* oxTab;\r\n        OxTabPageObject* oxTabPageDivision;\r\n        OxEntryObject* oxEntryDividend;\r\n        OxEntryObject* oxEntryDivisor;\r\n        OxLabelObject* oxLabelQuotient;\r\n        OxButtonObject* oxButtonDivide;\r\n        OxTabPageObject* oxTabPageMultiplication;\r\n        OxLabelObject* oxLabelMultiplication;\r\n    } ClientWindow;\r\n\r\n    // forward declarations\r\n    static BOOL WindowBeforeDeleteCB(OxWindowObject* ox);\r\n    static BOOL ButtonDivideCB(OxButtonObject* ox);\r\n    static BOOL DivisorVerifyCB(OxEntryObject* ox);\r\n    static void AboutCB();\r\n\r\n    int APIENTRY wWinMain(_In_ HINSTANCE hInstance, _In_opt_ HINSTANCE hPrevInstance, _In_ LPTSTR lpCmdLine, _In_ int nCmdShow)\r\n    {\r\n        UNREFERENCED_PARAMETER(hPrevInstance);\r\n        UNREFERENCED_PARAMETER(lpCmdLine);\r\n\r\n        OxCALL(Oxygen_Init(\"HOx\")); // show error if result of call is FALSE\r\n\r\n        OxRect rc = { .iLeft = 40, .iTop = 30, .iWidth = 600, .iHeight = 400 };\r\n        OxASSIGN(OxApp->oxWindow = OxWindow_New(NULL, &rc, \"Hello Oxygen\")); // show error if assigned value is NULL\r\n        OxApp->oxWindow->iMinHeight = 400;\r\n        OxApp->sStateID = \"HelloOxygen\";\r\n        OxCALL(OxApplication_RestoreState());\r\n\r\n        OxMenuObject* oxMainMenu;\r\n        OxASSIGN(oxMainMenu = OxMenu_New(\"Main Menu\"));\r\n        OxMenuObject* oxMdiWindowsMenu = OxMenu_New(\"Windows\");\r\n        OxMenuObject* oxHelpMenu = OxMenu_New(\"Help\");\r\n        OxMenuItemObject* oxMenuItem;\r\n        OxIconObject* oxIcon = OxIcon_FromFile(\"Example.ico\");\r\n        OxASSIGN(oxMenuItem = OxMenuItem_New(\"About...\", AboutCB, oxIcon));\r\n\r\n        OxCALL(OxMenu_AppendItem(oxMainMenu, (OxObject*)oxMdiWindowsMenu));\r\n        OxCALL(OxMenu_AppendItem(oxMainMenu, (OxObject*)oxHelpMenu));\r\n        OxCALL(OxMenu_AppendItem(oxHelpMenu, (OxObject*)oxMenuItem));\r\n        OxCALL(OxWindow_SetMenu(OxApp->oxWindow, oxMainMenu));\r\n\r\n        OxToolBarObject* oxToolBar = OxToolBar_New((OxWidgetObject*)OxApp->oxWindow);\r\n        //XX(oxToolBar);\r\n        OxCALL(OxToolBar_AppendItem(oxToolBar, oxMenuItem));\r\n        int iTB = OxToolBar_GetHeight(oxToolBar);\r\n\r\n        int iParts[] = { 120, -50, 0 }; // three parts: separations at 120 from left, 50 from right, 0 as sentinel\r\n        OxStatusBarObject* oxStatusBar = OxStatusBar_New((OxWidgetObject*)OxApp->oxWindow, iParts);\r\n        OxStatusBar_Message(oxStatusBar, \"Ready\", 0);\r\n        int iSB = OxStatusBar_GetHeight(oxStatusBar);\r\n\r\n        rc = (OxRect){ .iLeft = 0, .iTop = iTB, .iWidth = 0, .iHeight = -iSB };\r\n        OxMdiAreaObject* oxMdiArea = OxMdiArea_New((OxWidgetObject*)OxApp->oxWindow, &rc);\r\n        OxMdiArea_SetMenu(oxMdiArea, oxMdiWindowsMenu);\r\n\r\n        rc = (OxRect){ .iLeft = 10, .iTop = 10, .iWidth = 620, .iHeight = 440 };\r\n        OxMdiWindowObject* oxMdiWindow = OxMdiWindow_New(oxMdiArea, &rc, \"Calculator\");\r\n        oxMdiWindow->iMinHeight = 400;\r\n        ClientWindow* pMW = (ClientWindow*)OxAllocate(sizeof(ClientWindow));\r\n        oxMdiWindow->pUserData = pMW;\r\n        OxWindowClass.aMethods[OxWIDGET_BEFOREDELETE] = WindowBeforeDeleteCB; // subclassing 'light'\r\n\r\n        OxIconObject* oxExampleIcon = OxIcon_FromFile(\"Example.ico\");\r\n\r\n        rc = (OxRect){ .iLeft = 20, .iTop = 50, .iWidth = -20, .iHeight = -70 };\r\n        OxASSIGN(pMW->oxTab = OxTab_New((OxWidgetObject*)oxMdiWindow, &rc));\r\n        OxASSIGN(pMW->oxTabPageDivision = OxTabPage_New(pMW->oxTab, \"Division\", -1));\r\n\r\n\r\n        rc = (OxRect){ .iLeft = 80, .iTop = 20, .iWidth = -20, .iHeight = 20 };\r\n        OxASSIGN(pMW->oxEntryDividend = OxEntry_New((OxWidgetObject*)pMW->oxTabPageDivision, &rc));\r\n        pMW->oxEntryDividend->pDataType = &OxIntegerClass;\r\n        rc.iLeft -= 60; rc.iWidth = 50;\r\n        pMW->oxEntryDividend->oxLabel = OxLabel_New((OxWidgetObject*)pMW->oxTabPageDivision, &rc, \"Dividend\");\r\n\r\n        rc = (OxRect){ .iLeft = 80, .iTop = 50, .iWidth = -20, .iHeight = 20 };\r\n        OxASSIGN(pMW->oxEntryDivisor = OxEntry_New((OxWidgetObject*)pMW->oxTabPageDivision, &rc));\r\n        pMW->oxEntryDivisor->fnVerifyCB = DivisorVerifyCB;\r\n        pMW->oxEntryDivisor->pDataType = &OxIntegerClass;\r\n        rc.iLeft -= 60; rc.iWidth = 50;\r\n        pMW->oxEntryDividend->oxLabel = OxLabel_New((OxWidgetObject*)pMW->oxTabPageDivision, &rc, \"Divisor\");\r\n\r\n        rc = (OxRect){ .iLeft = 80, .iTop = 100, .iWidth = -20, .iHeight = 20 };\r\n        OxASSIGN(pMW->oxLabelQuotient = OxLabel_New((OxWidgetObject*)pMW->oxTabPageDivision, &rc));\r\n        pMW->oxLabelQuotient->pDataType = &OxFloatClass;\r\n        rc.iLeft -= 60; rc.iWidth = 50;\r\n        pMW->oxLabelQuotient->oxLabel = OxLabel_New((OxWidgetObject*)pMW->oxTabPageDivision, &rc, \"Quotient\");\r\n\r\n        rc = (OxRect){ .iLeft = -110, .iTop = -40, .iWidth = 90, .iHeight = 20 };\r\n        OxASSIGN(pMW->oxButtonDivide = OxButton_New((OxWidgetObject*)pMW->oxTabPageDivision, &rc, \"Divide\", ButtonDivideCB));\r\n\r\n        OxASSIGN(pMW->oxTabPageMultiplication = OxTabPage_New(pMW->oxTab, \"Multiplication\", -1));\r\n\r\n        rc = (OxRect){ .iLeft = 30, .iTop = OxWIDGET_CENTER, .iWidth = -30, .iHeight = 20 };\r\n        pMW->oxLabelMultiplication = OxLabel_New((OxWidgetObject*)pMW->oxTabPageMultiplication, &rc, \"Under Construction\");\r\n        OxLabel_Align(pMW->oxLabelMultiplication, OxALIGN_HORIZ_CENTER);\r\n\r\n        return OxApplication_Run();\r\n    }\r\n\r\n    static BOOL\r\n    DivisorVerifyCB(OxEntryObject* ox)\r\n    {\r\n        OxIntegerObject* oxDivisor = OxEntry_GetInputData(ox);\r\n        if (oxDivisor && oxDivisor != OxNull && oxDivisor->iInteger == 0) {\r\n            MessageBox(0, L\"Division by zero not possible.\", L\"Error\", MB_ICONERROR | MB_OK);\r\n            return FALSE;\r\n        }\r\n        return TRUE;\r\n    }\r\n\r\n    static BOOL\r\n    ButtonDivideCB(OxButtonObject* ox)\r\n    {\r\n        if (ox->oxWindow->oxFocusWidget) // validation callback not passed\r\n            return TRUE;\r\n\r\n        ClientWindow* pMW = (ClientWindow*)ox->oxWindow->pUserData;\r\n\r\n        if (pMW->oxEntryDividend->oxData != OxNull && pMW->oxEntryDivisor->oxData != OxNull) {\r\n            double dQuotient = ((OxIntegerObject*)pMW->oxEntryDividend->oxData)->iInteger / (double)((OxIntegerObject*)pMW->oxEntryDivisor->oxData)->iInteger;\r\n            OxFloatObject* oxQuotient = OxFloat_New(dQuotient);\r\n\r\n            OxCALL(OxLabel_SetData(pMW->oxLabelQuotient, oxQuotient));\r\n        }\r\n        else\r\n            MessageBox(0, L\"Division not possible.\", L\"Error\", MB_ICONERROR | MB_OK);\r\n\r\n        return TRUE;\r\n    }\r\n\r\n    static void\r\n    AboutCB()\r\n    {\r\n        OxRect rc = { .iLeft = OxWIDGET_CENTER, .iTop = OxWIDGET_CENTER, .iWidth = 320, .iHeight = 240 };\r\n        OxWindowObject* oxWindow = OxWindow_New(OxApp->oxWindow, &rc, \"About Hello Oxygen\");\r\n        oxWindow->iMaxWidth = 320; oxWindow->iMaxHeight = 240;\r\n\r\n        rc = (OxRect){ .iLeft = 40, .iTop = 40, .iWidth = -40, .iHeight = -40 };\r\n        OxLabelObject* oxLabel = OxLabel_New((OxWidgetObject*)oxWindow, &rc, \"Demonstration program for\\nOxygen C library\\n\\nThomas FÃ¼hringer, 2015\");\r\n        OxWindow_ShowModal(oxWindow);\r\n        OxREL(oxLabel);\r\n        OxREL(oxWindow);\r\n        //return TRUE;\r\n    }\r\n\r\n    static BOOL\r\n    WindowBeforeDeleteCB(OxWindowObject* ox) // exit gracefully\r\n    {\r\n        OutputDebugStringA(ox->pClass->sName);\r\n        if (ox->pClass == &OxMdiWindowClass) {\r\n            ClientWindow* pMW = (ClientWindow*)ox->pUserData;\r\n            OxREL(pMW->oxLabelMultiplication);\r\n            OxREL(pMW->oxTabPageMultiplication);\r\n            OxREL(pMW->oxButtonDivide);\r\n            OxREL(pMW->oxLabelQuotient);\r\n            OxREL(pMW->oxEntryDividend);\r\n            OxREL(pMW->oxEntryDivisor);\r\n            OxREL(pMW->oxTabPageDivision);\r\n            OxREL(pMW->oxTab);\r\n            OxFree(pMW);\r\n        }\r\n        return TRUE;\r\n    }\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}